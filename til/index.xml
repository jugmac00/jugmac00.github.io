<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Today I Learned on Jürgen Gmach</title><link>https://jugmac00.github.io/til/</link><description>Recent content in Today I Learned on Jürgen Gmach</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 22 May 2021 14:02:09 +0200</lastBuildDate><atom:link href="https://jugmac00.github.io/til/index.xml" rel="self" type="application/rss+xml"/><item><title>Variable Scope and List Comprehensions</title><link>https://jugmac00.github.io/til/variable-scope-and-list-comprehensions/</link><pubDate>Sat, 22 May 2021 14:02:09 +0200</pubDate><guid>https://jugmac00.github.io/til/variable-scope-and-list-comprehensions/</guid><description>Python 2 In Python 2 the temporary variable was not so temporary at all&amp;hellip;
❯ python2 Python 2.7.17 (default, Feb 27 2021, 15:10:58) [GCC 7.5.0] on linux2 Type &amp;#34;help&amp;#34;, &amp;#34;copyright&amp;#34;, &amp;#34;credits&amp;#34; or &amp;#34;license&amp;#34; for more information. &amp;gt;&amp;gt;&amp;gt; s = &amp;#34;abc&amp;#34; &amp;gt;&amp;gt;&amp;gt; [x for x in s] [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;] &amp;gt;&amp;gt;&amp;gt; x &amp;#39;c&amp;#39; As you can see, x leaks outside the scope the list comprehension.
Python 3 This has been changed in Python 3.</description></item><item><title>What Is the Meaning of Dollar Dollar in Bash</title><link>https://jugmac00.github.io/til/what-is-the-meaning-of-dollar-dollar-in-bash/</link><pubDate>Fri, 30 Apr 2021 18:58:07 +0200</pubDate><guid>https://jugmac00.github.io/til/what-is-the-meaning-of-dollar-dollar-in-bash/</guid><description>I stumbled upon a colleague&amp;rsquo;s bash script which contained the following line, which in isolation, made not much sense to me.
WRKDIR=~/app/work$$ But after some googling and having a look at the complete scope of the script, I finally got it.
... WRKDIR=~/app/work$$ ... mkdir $WRKDIR ... ... ... ... rmdir $WRKDIR $$ is a reference to the PID (process id) it was used to create a unique temporary file All good?</description></item><item><title>How to Run a Bash Script in a Sane Way</title><link>https://jugmac00.github.io/til/how-to-run-a-bash-script-in-a-sane-way/</link><pubDate>Thu, 29 Apr 2021 18:48:26 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-run-a-bash-script-in-a-sane-way/</guid><description>When you never had problems with running/debugging a bash script, you might wonder what I am talking about.
Instead of introducing the possible problems, and then the way to counter them, let&amp;rsquo;s start with the solution.
All your bash scripts should probably start with&amp;hellip;
#!/usr/bin/env bash &amp;hellip; wait&amp;hellip; it goes on&amp;hellip;
set -euxo pipefail Wat? Ok, let&amp;rsquo;s go through the options, one by one.
set -e This makes a bash script to stop on error immediately, and exit.</description></item><item><title>How Many Zope Repositories Are Compatible With Pypy?</title><link>https://jugmac00.github.io/til/how-many-zope-repositories-are-compatible-with-pypy/</link><pubDate>Mon, 19 Apr 2021 11:38:06 +0200</pubDate><guid>https://jugmac00.github.io/til/how-many-zope-repositories-are-compatible-with-pypy/</guid><description>Today, Johannes Raggam asked on the Plone/Zope community forum whether Zope is able to run on PyPy.
While I am not entirely sure, and I have some vague memories about potential problems with RestrictedPython, I can certainly grep the almost 300 Zope repositories for signs of PyPy support.
The best sign of PyPy support is IMHO that we run tests for it :-)
In order to grep in all repositories I use all-repos written by Anthony Sottile.</description></item><item><title>How to Replace URL in All Repositories</title><link>https://jugmac00.github.io/til/how-to-replace-url-in-all-repositories/</link><pubDate>Tue, 06 Apr 2021 11:22:11 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-replace-url-in-all-repositories/</guid><description>Recently Anthony Sottile, one of the maintainers of Flake8, announced on Twitter that the source code repository of Flake8 was moved from GitLab to GitHub.
Those of us, who also use Anthony&amp;rsquo;s pre-commit, now should update their .pre-commit-config.yaml file.
Though there is no hurry, as the repository on GitLab will stay as a mirror.
For one of my repos the .pre-config-config.yaml looks like this:
repos: ... - repo: https://gitlab.com/pycqa/flake8 rev: 3.</description></item><item><title>How to Restrict All Repos Grep to Specific Files</title><link>https://jugmac00.github.io/til/how-to-restrict-all-repos-grep-to-specific-files/</link><pubDate>Mon, 29 Mar 2021 18:42:46 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-restrict-all-repos-grep-to-specific-files/</guid><description>Back at the end of 2020, when Travis announced you need to move your open source projects from https://travis-ci.org to https://travis-ci.com, I wanted to know in which README files I used the link to the org-site - of the many, many repositories I manage.
That is a textbook example what you can do with all-repos.
A naive way would be to grep in all repositories like &amp;hellip;
all-repos-grep travis-ci.org Instead of grepping in all files, it is a better idea to restrict the search to only README files.</description></item><item><title>How to Fix a Broken Rollback on Nixos, caused by mixed Python Environments</title><link>https://jugmac00.github.io/til/how-to-fix-broken-rollback-on-nixos/</link><pubDate>Tue, 23 Mar 2021 19:14:44 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-fix-broken-rollback-on-nixos/</guid><description>Today I tried to update a Nixos channel to 20.09.xxx, but the virtual machine was still running on 15.09, and seemingly the nix-version was pinned.
I got an error saying something like the nix version is too low.
I then tried to do a rollback, but then I got another following error:
ERROR: ./batou --help Return code: 1 STDOUT Running unclean installation from requirements.txt Ensuring unclean install ... .batou/unclean/bin/python -m pip install -r requirements.</description></item><item><title>How to Find All Repositories in a GitHub Organization Which Do Not Follow the Src Layout?</title><link>https://jugmac00.github.io/til/how-to-find-all-repositories-which-do-not-follow-src-layout/</link><pubDate>Fri, 05 Mar 2021 10:49:56 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-find-all-repositories-which-do-not-follow-src-layout/</guid><description>Let&amp;rsquo;s say, while not everybody is convinced, that the so-called src layout is a great idea, at least it is a trend in the Python eco system.
And, e.g. Hynek has written about good reasons to use the src layout.
While my personal and work repositories (mostly) follow the src layout, what about the almost 300 Zope repositories?
all-repos to the rescue I really love to play with all-repos, an awesome tool to manage and manipulate a large amount of git repositories.</description></item><item><title>How to Restrict All Repos to One Github Organization</title><link>https://jugmac00.github.io/til/how-to-restrict-all-repos-to-one-github-organization/</link><pubDate>Thu, 25 Feb 2021 16:36:50 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-restrict-all-repos-to-one-github-organization/</guid><description>Especially, when maintaining many, many git repositories at once, Anthony Sottile&amp;rsquo;s all-repos is a bliss.
You can easily grep for text or find files in, or even apply patches to hundreds or thousands of repositories at once, which I already described in a blog post.
all-repos has a configuration option, which allows you to clone and manage all of your GitHub repositories at once.
Mine looks like&amp;hellip;
{ &amp;#34;output_dir&amp;#34;: &amp;#34;output&amp;#34;, &amp;#34;source&amp;#34;: &amp;#34;all_repos.</description></item><item><title>How to Use the Output of One Bash Command as the Argument of Another</title><link>https://jugmac00.github.io/til/how-to-use-the-output-of-one-bash-command-as-the-argument-of-another/</link><pubDate>Mon, 07 Sep 2020 18:52:25 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-use-the-output-of-one-bash-command-as-the-argument-of-another/</guid><description>TIL my TIL is not secure There is a security issue with the following description - at least when you handle sensitive data.
see here https://github.com/jugmac00/til/commit/7ea93202cecf97070c8931bbe5a1f64c78d41dcb#commitcomment-42050997
Thanks to Anthony Sottile for reporting!
Please see https://unix.stackexchange.com/questions/205180/how-to-pass-password-to-mysql-command-line for a better way to create a login one-liner.
How do you use the output of one bash command as an argument of another command? For the virtual machines at my web hosting company, the mysql root password is stored in a config file.</description></item></channel></rss>