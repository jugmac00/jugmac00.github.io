<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>coverage on Jürgen Gmach</title><link>https://jugmac00.github.io/tags/coverage/</link><description>Recent content in coverage on Jürgen Gmach</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 21 Nov 2021 15:34:38 +0100</lastBuildDate><atom:link href="https://jugmac00.github.io/tags/coverage/index.xml" rel="self" type="application/rss+xml"/><item><title>Combine Coverage for Different Python Versions</title><link>https://jugmac00.github.io/blog/combine-coverage-for-different-python-versions/</link><pubDate>Sun, 21 Nov 2021 15:34:38 +0100</pubDate><guid>https://jugmac00.github.io/blog/combine-coverage-for-different-python-versions/</guid><description>Is it enough to run code coverage for a single Python version?
Probably, but not necessarily.
Especially when you still need to support Python 2.7 (sigh), there could be quite some different code paths for Python 2 and Python 3.
A simple example&amp;hellip;
try: import Queue # Python 2 except ImportError: # Python 3 import queue as Queue # Python 3 But also the different Python 3 versions may require that you not only test your code for each interpreter, but also you need to assess code coverage for the different versions, and certainly you want to make sure you got all paths covered.</description></item></channel></rss>