<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>github on Jürgen Gmach</title><link>https://jugmac00.github.io/tags/github/</link><description>Recent content in github on Jürgen Gmach</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 19 Apr 2021 09:03:29 +0200</lastBuildDate><atom:link href="https://jugmac00.github.io/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>How to List All Open Pull Requests for One GitHub Organization</title><link>https://jugmac00.github.io/til/how-to-list-all-open-pull-requests-for-one-github-organization/</link><pubDate>Mon, 19 Apr 2021 09:03:29 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-list-all-open-pull-requests-for-one-github-organization/</guid><description>While most developers probably know, that you can list all your open pull requests on GitHub via https://github.com/pulls, how can you list all open pull requests for one GitHub organization?
I was on holiday for two weeks, and I want to get up to speed which pull requests need to be reviewed in my company&amp;hellip;
Luckily, there is no need to do a complicate query or work with GitHub&amp;rsquo;s GraphQL API&amp;hellip;</description></item><item><title>How to Restrict All Repos to One Github Organization</title><link>https://jugmac00.github.io/til/how-to-restrict-all-repos-to-one-github-organization/</link><pubDate>Thu, 25 Feb 2021 16:36:50 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-restrict-all-repos-to-one-github-organization/</guid><description>Especially, when maintaining many, many git repositories at once, Anthony Sottile&amp;rsquo;s all-repos is a bliss.
You can easily grep for text or find files in, or even apply patches to hundreds or thousands of repositories at once, which I already described in a blog post.
all-repos has a configuration option, which allows you to clone and manage all of your GitHub repositories at once.
Mine looks like&amp;hellip;
{ &amp;#34;output_dir&amp;#34;: &amp;#34;output&amp;#34;, &amp;#34;source&amp;#34;: &amp;#34;all_repos.</description></item><item><title>How to Install a Python Package Directly From a Git Branch From GitHub</title><link>https://jugmac00.github.io/til/how-to-install-a-python-package-directly-from-a-git-branch-from-github/</link><pubDate>Mon, 11 Jan 2021 08:55:54 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-install-a-python-package-directly-from-a-git-branch-from-github/</guid><description>Bernát Gábor is currently working on a complete rewrite for tox.
I alpha-tested the latest release (4.0.0a2), and reported a couple of problems.
Within a day Bernát published some fixes on the rewrite branch, and asked me to test it.
That means there is no new package on PyPI, yet.
So, I had to install tox directly from GitHub, to be exact, from the rewrite branch:
pip install git+https://github.com/tox-dev/tox@rewrite or more general</description></item><item><title>How to Install Release Candidates</title><link>https://jugmac00.github.io/til/how-to-install-release-candidates/</link><pubDate>Fri, 10 Jul 2020 09:29:55 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-install-release-candidates/</guid><description>How to install release candidates Today on Twitter, one of the core maintainers of pytest announced the release of pytest 6.0.0rc1, and also asked to install and run it, and report if there are any problems. https://twitter.com/nicoddemus/status/1281385522422784005
Ok, but how do you install a release candidate?
If you just do a pip install pytest, the current latest release gets installed, which is 5.4.3 as the time of writing.
Turns out, there are a couple of options&amp;hellip;</description></item></channel></rss>