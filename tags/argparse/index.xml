<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>argparse on Jürgen Gmach</title><link>https://jugmac00.github.io/tags/argparse/</link><description>Recent content in argparse on Jürgen Gmach</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 18 May 2022 15:16:32 +0200</lastBuildDate><atom:link href="https://jugmac00.github.io/tags/argparse/index.xml" rel="self" type="application/rss+xml"/><item><title>Choosing Singular or Plural for Argument Names in Argparse</title><link>https://jugmac00.github.io/til/choosing-singular-or-plural-for-argument-names-in-argparse/</link><pubDate>Wed, 18 May 2022 15:16:32 +0200</pubDate><guid>https://jugmac00.github.io/til/choosing-singular-or-plural-for-argument-names-in-argparse/</guid><description>Naming is hard, right?
Today I was extending an argparse based CLI application.
I wanted to add an optional argument so that I can pass in environment variables.
For this argparse has a special &amp;ldquo;action&amp;rdquo;, called append.
From the argparse documentation:
&amp;gt;&amp;gt;&amp;gt; parser = argparse.ArgumentParser() &amp;gt;&amp;gt;&amp;gt; parser.add_argument('--foo', action='append') &amp;gt;&amp;gt;&amp;gt; parser.parse_args('--foo 1 --foo 2'.split()) Namespace(foo=['1', '2']) Awesome!
Now I can access all the provided values as foo.
Wait a moment Wait! This does not match.</description></item><item><title>How to Gracefully Rename a Command Line Argument in an Argparse Application</title><link>https://jugmac00.github.io/til/how-to-gracefully-rename-a-command-line-argument-in-an-argparse-application/</link><pubDate>Mon, 07 Feb 2022 16:45:34 +0100</pubDate><guid>https://jugmac00.github.io/til/how-to-gracefully-rename-a-command-line-argument-in-an-argparse-application/</guid><description>The CI runner I am currently working on can be used as follows:
lpcraft run --output Now, what is output? A boolean? In the sense of &amp;ldquo;do create output&amp;rdquo;? A path to a directory? Something else?
disambiguate --output can be used to specify a directory for the build artifacts.
So, let&amp;rsquo;s rename it to --output-directory - problem solved.
Yes, but what about all the users out there&amp;hellip;
argparse magic to the rescue We all know argparse is magic, and sometimes that even helps.</description></item><item><title>Testing Argparse Applications - the Better Way</title><link>https://jugmac00.github.io/blog/testing-argparse-applications-the-better-way/</link><pubDate>Tue, 30 Nov 2021 17:07:22 +0100</pubDate><guid>https://jugmac00.github.io/blog/testing-argparse-applications-the-better-way/</guid><description>When you are creating command line applications in Python, you probably heard of argparse, which is a great library for exactly doing this, and it is even included in Python&amp;rsquo;s standard library.
Imagine you have created the following argparse application:
&amp;lt;main.py&amp;gt;
import argparse def main(): parser = argparse.ArgumentParser() parser.add_argument('--name', required=True) args = parser.parse_args() print(f'Hello {args.name}') if __name__ == '__main__': sys.exit(main()) Looks straightforward, works great, but at one point, you certainly want to add tests for it, right?</description></item></channel></rss>