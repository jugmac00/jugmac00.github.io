<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>packaging on Jürgen Gmach</title><link>https://jugmac00.github.io/tags/packaging/</link><description>Recent content in packaging on Jürgen Gmach</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 05 Mar 2021 10:49:56 +0200</lastBuildDate><atom:link href="https://jugmac00.github.io/tags/packaging/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Find All Repositories in a GitHub Organization Which Do Not Follow the Src Layout?</title><link>https://jugmac00.github.io/til/how-to-find-all-repositories-which-do-not-follow-src-layout/</link><pubDate>Fri, 05 Mar 2021 10:49:56 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-find-all-repositories-which-do-not-follow-src-layout/</guid><description>Let&amp;rsquo;s say, while not everybody is convinced, that the so-called src layout is a great idea, at least it is a trend in the Python eco system.
And, e.g. Hynek has written about good reasons to use the src layout.
While my personal and work repositories (mostly) follow the src layout, what about the almost 300 Zope repositories?
all-repos to the rescue I really love to play with all-repos, an awesome tool to manage and manipulate a large amount of git repositories.</description></item><item><title>How to Install a Python Package Directly From a Git Branch From GitHub</title><link>https://jugmac00.github.io/til/how-to-install-a-python-package-directly-from-a-git-branch-from-github/</link><pubDate>Mon, 11 Jan 2021 08:55:54 +0200</pubDate><guid>https://jugmac00.github.io/til/how-to-install-a-python-package-directly-from-a-git-branch-from-github/</guid><description>Bernát Gábor is currently working on a complete rewrite for tox.
I alpha-tested the latest release (4.0.0a2), and reported a couple of problems.
Within a day Bernát published some fixes on the rewrite branch, and asked me to test it.
That means there is no new package on PyPI, yet.
So, I had to install tox directly from GitHub, to be exact, from the rewrite branch:
pip install git+https://github.com/tox-dev/tox@rewrite or more general</description></item><item><title>Why Is Setuptools a Runtime Dependency</title><link>https://jugmac00.github.io/til/why-is-setuptools-a-runtime-dependency/</link><pubDate>Thu, 23 Jul 2020 14:03:32 +0200</pubDate><guid>https://jugmac00.github.io/til/why-is-setuptools-a-runtime-dependency/</guid><description>&amp;hellip; or in other words&amp;hellip;
Why is this snippet part of setup.py in all Zope projects?
install_requires = &amp;#39;setuptools&amp;#39;, This sounds weird at first, but there is good reason.
setuptools provides pkg_resources, and the latter is used in __init__.py, in order to declare a namespace package.
__import__(&amp;#39;pkg_resources&amp;#39;).declare_namespace(__name__) Still confused?
While pkg_resources-style namespace packages are no longer recommended for new projects, this approach was used to split large packages, and retrieve the contents from more than one location.</description></item></channel></rss>