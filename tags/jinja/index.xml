<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>jinja on Jürgen Gmach</title><link>https://jugmac00.github.io/tags/jinja/</link><description>Recent content in jinja on Jürgen Gmach</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 13 Aug 2020 22:15:25 +0200</lastBuildDate><atom:link href="https://jugmac00.github.io/tags/jinja/index.xml" rel="self" type="application/rss+xml"/><item><title>How Can You Inject the Language as String Into a Jinja Template</title><link>https://jugmac00.github.io/til/how-can-you-inject-the-language-as-string-into-a-jinja-template/</link><pubDate>Thu, 13 Aug 2020 22:15:25 +0200</pubDate><guid>https://jugmac00.github.io/til/how-can-you-inject-the-language-as-string-into-a-jinja-template/</guid><description>I created a multilingual project using Flask with the help of Flask-Babel.
While the translation mechanism via GNU gettext itself is pretty straightforward, I did not know how to inject the actual language into the Jinja template, so I can use it to set &amp;lt;html lang=&amp;quot;xxx&amp;quot;&amp;gt;.
While it is odd that this is not mentioned in the documentation, once again StackOverflow offered solutions.
solution one Just translate the language!
&amp;lt;html lang=&amp;#34;{{ _(&amp;#39;en&amp;#39;) }}&amp;#34;&amp;gt; That was too simple to think of :-)</description></item></channel></rss>