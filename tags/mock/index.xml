<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>mock on Jürgen Gmach</title><link>https://jugmac00.github.io/tags/mock/</link><description>Recent content in mock on Jürgen Gmach</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 30 Nov 2021 17:07:22 +0100</lastBuildDate><atom:link href="https://jugmac00.github.io/tags/mock/index.xml" rel="self" type="application/rss+xml"/><item><title>Testing Argparse Applications - the Better Way</title><link>https://jugmac00.github.io/blog/testing-argparse-applications-the-better-way/</link><pubDate>Tue, 30 Nov 2021 17:07:22 +0100</pubDate><guid>https://jugmac00.github.io/blog/testing-argparse-applications-the-better-way/</guid><description>When you are creating command line applications in Python, you probably heard of argparse, which is a great library for exactly doing this, and it is even included in Python&amp;rsquo;s standard library.
Imagine you have created the following argparse application:
&amp;lt;main.py&amp;gt;
#!/usr/bin/env python import argparse def main(): parser = argparse.ArgumentParser() parser.add_argument('--name', required=True) args = parser.parse_args() print(f'Hello {args.name}') if __name__ == '__main__': sys.exit(main()) Looks straightforward, works great, but at one point, you certainly want to add tests for it, right?</description></item></channel></rss>